import pandas
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.feature_extraction import DictVectorizer
from sklearn.linear_model import Ridge
from scipy.sparse import hstack
from sklearn.preprocessing import LabelEncoder
from sklearn.cross_validation import train_test_split


def get_data(filename):
    df = pandas.read_csv(filename,encoding = "ISO-8859-1")
    df['FullDescription'] = df['FullDescription'].str.lower().replace('[^a-zA-Z0-9]', ' ', regex = True)
    df['Industry'] = df['Industry'].str.lower().replace('[^a-zA-Z0-9]', ' ', regex = True)
    df['Role'] = df['Role'].str.lower().replace('[^a-zA-Z0-9]', ' ', regex = True)
    df['LocationNormalized'].str.lower().replace('[^a-zA-Z0-9]', ' ', regex = True)
    df['Designation'].str.lower().replace('[^a-zA-Z0-9]', ' ', regex = True)
    return df
train = get_data("C:\\Users\\ygupta\\Desktop\\salary_pred.csv")
# print((train))
labels=train["SalaryNormalized"]
train.drop(['SalaryNormalized'],inplace=True,axis=1)
# print(train.info())
X_train, X_test, y_train, y_test = train_test_split(train,labels,
                                                    test_size=0.25)
# print(train.info())
vectorizer = TfidfVectorizer(min_df=5)
enc = DictVectorizer()
clf = Ridge(alpha=1.0, random_state=241)
X_train_categ = enc.fit_transform(X_train[["Experience","LocationNormalized"]].to_dict('records'))
designation = vectorizer.fit_transform(X_train['Designation'].values.astype('U'))
industry = vectorizer.fit_transform(X_train['Industry'].values.astype('U'))
role = vectorizer.fit_transform(X_train['Role'].values.astype('U'))
full_desc = vectorizer.fit_transform(X_train['FullDescription'].values.astype('U'))
x_train = hstack([X_train_categ, designation,industry,role,full_desc])
clf.fit(x_train, y_train)
